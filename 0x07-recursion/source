
<!DOCTYPE html>
<html lang="en">
  <head>
      <meta charset="utf-8">
          <meta http-equiv="X-UA-Compatible" content="IE=edge">
	      <meta name="viewport" content="width=device-width, initial-scale=1">
	          <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		      <meta name="description" content="">
		          <meta name="author" content="Holberton School">
			      <link rel="icon" href="../../favicon.ico">
			          <link href='https://fonts.googleapis.com/css?family=Lora:400,700' rel='stylesheet' type='text/css'>
				      <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
				          <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">

    <title>Holberton School's awesome intranet</title>

    <link rel="stylesheet" media="all" href="/assets/application-df3ae5a2f8b982500e5c8960ea16627e8b686b42c4d63c90fe8c963f7f3ab86d.css" />
    	  <script src="/assets/application-891c9d030a8142037aa0d240e8ab0c51548ce2d036f474a0ef70b188be45a30e.js"></script>
	    <link rel="shortcut icon" type="image/x-icon" href="/assets/favicon-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.ico" />
	    	  <meta name="csrf-param" content="authenticity_token" />
		  <meta name="csrf-token" content="LRbERSJeD3fbSbINp+kwZ2hJPmUaSpGoDdyoH0AMmYfGUV/b4o0o3oy3wmpYuUtEG3FZUewbOsGeRltzxowZ5g==" />

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
        <!--[if lt IE 9]>
	      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
	            <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
		        <![endif]-->
			  </head>

  <body class="signed_in">

      <nav id="nav-left" class="hidden-xs title-font">
              <a href="/">
	                <div id="holberton-logo">
			            <img alt="Holberton School" src="/assets/holberton-logo-simplified-d4e8a1e8bf5ad93c8c3ce32895b4b53749b477b7ba7342d7f064e6883bcd3be2.png" />
				              </div>
					      </a>        <ul>
					                  <li>
							      <a href="/dashboards/my_planning">
							              <div class="icon">
								                <i class="fa fa-calendar"></i>
										        </div>
											      My planning
											      </a>  </li>
											        <li>
												    <a href="/dashboards/my_current_projects">
												            <div class="icon">
													              <i class="fa fa-list"></i>
														              </div>
															            My projects
																    </a>  </li>
																      <li>
																          <a href="/dashboards/my_concepts">
																	          <div class="icon">
																		            <i class="fa fa-file-text"></i>
																			            </div>
																				          My concepts
																					  </a>  </li>
																					    <li>
																					        <a href="/dashboards/my_batchmates">
																						        <div class="icon">
																							          <i class="fa fa-users"></i>
																								          </div>
																									        My batchmates
																										</a>  </li>
																										  <li>
																										      <a href="/dashboards/corrections_i_can_make">
																										              <div class="icon">
																											                <i class="fa fa-check"></i>
																													        </div>
																														      QA reviews I can make
																														      </a>  </li>
																														        <li>
																															    <a href="/dashboards/my_captain_log">
																															            <div class="icon">
																																              <i class="fa fa-book"></i>
																																	              </div>
																																		            My Captain's Logs
																																			    </a>  </li>
																																			      <li>
																																			          <a href="/dashboards/my_officers">
																																				          <div class="icon">
																																					            <i class="fa fa-building"></i>
																																						            </div>
																																							          My Officers
																																								  </a>  </li>
																																								    <li>
																																								        <a href="/dashboards/my_server">
																																									        <div class="icon">
																																										          <i class="fa fa-server"></i>
																																											          </div>
																																												        My Servers
																																													</a>  </li>

<li>
  <a href="/users/my_profile">
        <div class="icon">
	        <i class="fa fa-user"></i>
		      </div>
		          My profile
			  </a></li>

        </ul>
	      </nav>

    <main>

        <nav class="navbar navbar-default navbar-main visible-xs">
	          <div class="container">
		              <div class="navbar-header">
			                    <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
					                    <span class="sr-only">Toggle navigation</span>
							                    <span class="icon-bar"></span>
									                    <span class="icon-bar"></span>
											                    <span class="icon-bar"></span>
													                  </button>
															                <a class="navbar-brand" href="/">
																	                  <img alt="Holberton School" src="/assets/holberton-logo-simplified-d4e8a1e8bf5ad93c8c3ce32895b4b53749b477b7ba7342d7f064e6883bcd3be2.png" />
																			  </a>            </div>
																			              <div id="navbar" class="collapse navbar-collapse">
																				                    <ul class="nav navbar-nav">
																						                      <li>
																								          <a href="/dashboards/my_planning">
																									        My planning
																										</a>  </li>
																										  <li>
																										      <a href="/dashboards/my_current_projects">
																										            My projects
																											    </a>  </li>
																											      <li>
																											          <a href="/dashboards/my_concepts">
																												        My concepts
																													</a>  </li>
																													  <li>
																													      <a href="/dashboards/my_batchmates">
																													            My batchmates
																														    </a>  </li>
																														      <li>
																														          <a href="/dashboards/corrections_i_can_make">
																															        QA reviews I can make
																																</a>  </li>
																																  <li>
																																      <a href="/dashboards/my_captain_log">
																																            My Captain's Logs
																																	    </a>  </li>
																																	      <li>
																																	          <a href="/dashboards/my_officers">
																																		        My Officers
																																			</a>  </li>
																																			  <li>
																																			      <a href="/dashboards/my_server">
																																			            My Servers
																																				    </a>  </li>

<li>
  <a href="/users/my_profile">
      My profile
      </a></li>

              </ul>

              <ul class="nav navbar-nav navbar-right">
	                      <li class="dropdown">
			                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Timothy Britton <span class="caret"></span></a>
						                  <ul class="dropdown-menu">
								                      <li><a rel="nofollow" data-method="delete" href="/auth/sign_out">Log out</a></li>
										                        </ul>
													                </li>
															              </ul>

            </div><!--/.nav-collapse -->
	              </div>
		              </nav>



      <article class="">
                <div class="alert alert-info sm-gap">You just released the optional tasks of this project. Have fun!</div>


<h1 class="gap">0x07. C - Recursion</h1>

<div id="project_id" style="display: none" data-project-id="219"></div>

<p class="sm-gap">
  <small>
      <i class="fa fa-folder-open"></i>
          Low-level programming &amp; Algorithm â€• Hatching out
	    </small>
	    </p>

  <p>
      <em>
            <small>
	            <i class="fa fa-user"></i> by Julien Barbier, co-founder at Holberton School
		          </small>
			      </em>
			        </p>



  <p>
      <small>
            <i class="fa fa-calendar"></i>
	            Ongoing project - started 11-02-2016, must end by 11-03-2016 (in about 15 hours)
		            - <span id="student_task_done_percentage">you're 0</span>% done.
			        </small>
				  </p>

  <p>
      <small>
            <i class="fa fa-check-square"></i>
	          QA review fully automated.
		      </small>
		        </p>




<article id="description" class="gap formatted-content">
  <p><img src="https://s3.amazonaws.com/intranet-projects-files/holbertonschool-low_level_programming/219/a88.jpg" /></p>

<h2>Readme</h2>

<p>Read or watch <a href="https://docs.google.com/a/holbertonschool.com/presentation/d/1YZJZnrPuu1BGicyO9CRUUiEYSR7iFuPTEHlEjNkr3Hc/edit?usp=sharing">0x07. Recursion, introduction</a>, <a href="https://www.tutorialspoint.com/cprogramming/c_recursion.htm">C - Recursion</a>, <a href="https://www.youtube.com/watch?v=XGxbXMP6k8k">C Programming Tutorial 85, Recursion pt.1</a>, <a href="https://www.youtube.com/watch?v=7XiIS6HobNs">C Programming Tutorial 86, Recursion pt.2</a>.</p>

<h2>What you should learn from this project</h2>

<p>At the end of this project you are expected to be able to explain to anyone, without the help of Google:</p>

<ul>
<li>What is recursion, and how to use it</li>
</ul>

<h2>Requirements</h2>

<ul>
<li>Allowed editors: <code>vi</code>, <code>vim</code>, <code>emacs</code></li>
<li>All your files will be compiled on Ubuntu 14.04 LTS</li>
<li>Your programs and functions will be compiled with <code>gcc</code> using the flags <code>-Wall</code> <code>-Werror</code> <code>-Wextra</code> <code>and -pedantic</code></li>
<li>All your files should end with a new line</li>
<li>A <code>README.md</code> file, at the root of the folder of the project is mandatory</li>
<li>Your code should use the <code>Betty</code> style. It will be checked using <a href="https://github.com/holbertonschool/Betty/blob/master/betty-style.pl">betty-style.pl</a> and <a href="https://github.com/holbertonschool/Betty/blob/master/betty-doc.pl">betty-doc.pl</a></li>
<li>You are not allowed to use global variables</li>
<li>No more than 5 functions per file</li>
<li>You are not allowed to use the standard library. Any use of functions like <code>printf</code>, <code>puts</code>, etc... is forbidden</li>
<li>You are allowed to use <a href="https://github.com/holbertonschool/_putchar.c/blob/master/_putchar.c">_putchar</a></li>
<li>You don&#39;t have to push <code>_putchar.c</code>, we will use our file. If you do it won&#39;t be taken into account</li>
<li>In the following examples, the <code>main.c</code> files are showed as examples. You can use them to test your functions, but you don&#39;t have to push them to your repo (if you do we won&#39;t take them into account). We will use our own <code>main.c</code> files at compilation. Our <code>main.c</code> files might be different from the one showed in the examples</li>
<li>The prototypes of all your functions and the prototype of the function <code>_putchar</code> should be included in your header file called <code>holberton.h</code></li>
<li>Don&#39;t forget to push your header file</li>
<li><strong>You are not allowed to use any kind of loops</strong></li>
</ul>

</article>

  <hr class="gap">
    <h2 class="gap">Tasks</h2>
      <section class="formatted-content">
              <div data-role="task914" data-position="1">
	                  <div class=" clearfix gap" id="task-914">
			  <span id="user_id" data-id="81"></span>

    <div class="student_task_controls">

      <!-- button Done -->
              <button class="student_task_done btn btn-default no" data-task-id="914">
	                <span class="no"><i class="fa fa-square-o"></i></span>
			          <span class="yes"><i class="fa fa-check-square-o"></i></span>
				            <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
					              Done<span class="no pending">?</span><span class="yes">!</span>
						              </button>
							              <br>

      <!-- button Who is done? -->
            <button class="users_done_for_task btn btn-default btn-sm" data-task-id="914" data-toggle="modal" data-target="#task-914-users-done-modal">
	            Who is done?
		          </button>
			        <div class="modal fade users-done-modal" id="task-914-users-done-modal">
				        <div class="modal-dialog">
					          <div class="modal-content">
						              <div class="modal-header">
							                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
									                  <h4 class="modal-title">Batchmates who are done with "She locked away a secret, deep inside herself, something she once knew to be true... but chose to forget"</h4>
											              </div>
												                  <div class="modal-body">
														                <div class="list-group">
																              </div>
																	                        <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/914/mark_as_help">Help!</a>
																				            </div>
																					              </div>
																						              </div>
																							            </div>

      <!-- button Help! / Canel help -->
                <button class="student_task_help btn btn-default btn-sm" data-task-id="914" >
		            Help!
			              </button>
				          </div>

  <h4 class="task">
      0. She locked away a secret, deep inside herself, something she once knew to be true... but chose to forget
          <span class="alert alert-warning mandatory-optional">
	        mandatory
		    </span>
		      </h4>


  <!-- Progress vs Score -->



  <p>Write a function that prints a string, followed by a new line.</p>

<ul>
<li>Prototype: <code>void _puts_recursion(char *s);</code></li>
</ul>

<p>FYI: The standard library provides a similar function: <code>puts</code>. Run <code>man puts</code> to learn more.</p>

<pre><code>julien@ubuntu:~/0x07. Recursion$ cat 0-main.c
#include &quot;holberton.h&quot;

/**
 * main - check the code for Holberton School students.
  *
   * Return: Always 0.
    */
    int main(void)
    {
        _puts_recursion(&quot;Betty Holberton&quot;);
	    return (0);
	    }
	    julien@ubuntu:~/0x07. Recursion$ gcc -Wall -pedantic -Werror -Wextra _putchar.c 0-main.c 0-puts_recursion.c -o 0-puts_recursion
	    julien@ubuntu:~/0x07. Recursion$ ./0-puts_recursion
	    Betty Holberton
	    julien@ubuntu:~/0x07. Recursion$
	    </code></pre>


    <p class="sm-gap"><strong>Repo:</strong></p>
        <ul>
	      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
	              <li>Directory: <code>0x07-recursion</code></li>
		              <li>File: <code>0-puts_recursion.c</code></li>
			          </ul>





</div>

        </div>
	        <div data-role="task915" data-position="2">
		            <div class=" clearfix gap" id="task-915">
			    <span id="user_id" data-id="81"></span>

    <div class="student_task_controls">

      <!-- button Done -->
              <button class="student_task_done btn btn-default no" data-task-id="915">
	                <span class="no"><i class="fa fa-square-o"></i></span>
			          <span class="yes"><i class="fa fa-check-square-o"></i></span>
				            <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
					              Done<span class="no pending">?</span><span class="yes">!</span>
						              </button>
							              <br>

      <!-- button Who is done? -->
            <button class="users_done_for_task btn btn-default btn-sm" data-task-id="915" data-toggle="modal" data-target="#task-915-users-done-modal">
	            Who is done?
		          </button>
			        <div class="modal fade users-done-modal" id="task-915-users-done-modal">
				        <div class="modal-dialog">
					          <div class="modal-content">
						              <div class="modal-header">
							                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
									                  <h4 class="modal-title">Batchmates who are done with "Why is it so important to dream? Because, in my dreams we are together"</h4>
											              </div>
												                  <div class="modal-body">
														                <div class="list-group">
																              </div>
																	                        <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/915/mark_as_help">Help!</a>
																				            </div>
																					              </div>
																						              </div>
																							            </div>

      <!-- button Help! / Canel help -->
                <button class="student_task_help btn btn-default btn-sm" data-task-id="915" >
		            Help!
			              </button>
				          </div>

  <h4 class="task">
      1. Why is it so important to dream? Because, in my dreams we are together
          <span class="alert alert-warning mandatory-optional">
	        mandatory
		    </span>
		      </h4>


  <!-- Progress vs Score -->



  <p>Write a function that prints a string, in reverse.</p>

<ul>
<li>Prototype: <code>void _print_rev_recursion(char *s);</code></li>
</ul>

<pre><code>julien@ubuntu:~/0x07. Recursion$ cat 1-main.c
#include &quot;holberton.h&quot;

/**
 * main - check the code for Holberton School students.
  *
   * Return: Always 0.
    */
    int main(void)
    {
        _print_rev_recursion(&quot;\nColton Walker&quot;);
	    return (0);
	    }
	    julien@ubuntu:~/0x07. Recursion$ gcc -Wall -pedantic -Werror -Wextra _putchar.c 1-main.c 1-print_rev_recursion.c -o 1-print_rev_recursion
	    julien@ubuntu:~/0x07. Recursion$ ./1-print_rev_recursion
	    reklaW notloC
	    julien@ubuntu:~/0x07. Recursion$
	    </code></pre>


    <p class="sm-gap"><strong>Repo:</strong></p>
        <ul>
	      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
	              <li>Directory: <code>0x07-recursion</code></li>
		              <li>File: <code>1-print_rev_recursion.c</code></li>
			          </ul>





</div>

        </div>
	        <div data-role="task916" data-position="3">
		            <div class=" clearfix gap" id="task-916">
			    <span id="user_id" data-id="81"></span>

    <div class="student_task_controls">

      <!-- button Done -->
              <button class="student_task_done btn btn-default no" data-task-id="916">
	                <span class="no"><i class="fa fa-square-o"></i></span>
			          <span class="yes"><i class="fa fa-check-square-o"></i></span>
				            <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
					              Done<span class="no pending">?</span><span class="yes">!</span>
						              </button>
							              <br>

      <!-- button Who is done? -->
            <button class="users_done_for_task btn btn-default btn-sm" data-task-id="916" data-toggle="modal" data-target="#task-916-users-done-modal">
	            Who is done?
		          </button>
			        <div class="modal fade users-done-modal" id="task-916-users-done-modal">
				        <div class="modal-dialog">
					          <div class="modal-content">
						              <div class="modal-header">
							                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
									                  <h4 class="modal-title">Batchmates who are done with "Dreams feel real while we&#39;re in them. It&#39;s only when we wake up that we realize something was actually strange"</h4>
											              </div>
												                  <div class="modal-body">
														                <div class="list-group">
																              </div>
																	                        <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/916/mark_as_help">Help!</a>
																				            </div>
																					              </div>
																						              </div>
																							            </div>

      <!-- button Help! / Canel help -->
                <button class="student_task_help btn btn-default btn-sm" data-task-id="916" >
		            Help!
			              </button>
				          </div>

  <h4 class="task">
      2. Dreams feel real while we&#39;re in them. It&#39;s only when we wake up that we realize something was actually strange
          <span class="alert alert-warning mandatory-optional">
	        mandatory
		    </span>
		      </h4>


  <!-- Progress vs Score -->



  <p>Write a function that returns the length of a string.</p>

<ul>
<li>Prototype: <code>int _strlen_recursion(char *s);</code></li>
</ul>

<p>FYI: The standard library provides a similar function: <code>strlen</code>. Run <code>man strlen</code> to learn more.</p>

<pre><code>julien@ubuntu:~/0x07. Recursion$ cat 2-main.c
#include &quot;holberton.h&quot;
#include &lt;stdio.h&gt;

/**
 * main - check the code for Holberton School students.
  *
   * Return: Always 0.
    */
    int main(void)
    {
        int n;

    n = _strlen_recursion(&quot;Corbin Coleman&quot;);
        printf(&quot;%d\n&quot;, n);
	    return (0);
	    }
	    julien@ubuntu:~/0x07. Recursion$ gcc -Wall -pedantic -Werror -Wextra  2-main.c 2-strlen_recursion.c -o 2-strlen_recursion
	    julien@ubuntu:~/0x07. Recursion$ ./2-strlen_recursion
	    14
	    julien@ubuntu:~/0x07. Recursion$
	    </code></pre>


    <p class="sm-gap"><strong>Repo:</strong></p>
        <ul>
	      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
	              <li>Directory: <code>0x07-recursion</code></li>
		              <li>File: <code>2-strlen_recursion.c</code></li>
			          </ul>





</div>

        </div>
	        <div data-role="task917" data-position="4">
		            <div class=" clearfix gap" id="task-917">
			    <span id="user_id" data-id="81"></span>

    <div class="student_task_controls">

      <!-- button Done -->
              <button class="student_task_done btn btn-default no" data-task-id="917">
	                <span class="no"><i class="fa fa-square-o"></i></span>
			          <span class="yes"><i class="fa fa-check-square-o"></i></span>
				            <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
					              Done<span class="no pending">?</span><span class="yes">!</span>
						              </button>
							              <br>

      <!-- button Who is done? -->
            <button class="users_done_for_task btn btn-default btn-sm" data-task-id="917" data-toggle="modal" data-target="#task-917-users-done-modal">
	            Who is done?
		          </button>
			        <div class="modal fade users-done-modal" id="task-917-users-done-modal">
				        <div class="modal-dialog">
					          <div class="modal-content">
						              <div class="modal-header">
							                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
									                  <h4 class="modal-title">Batchmates who are done with "You mustn&#39;t be afraid to dream a little bigger, darling"</h4>
											              </div>
												                  <div class="modal-body">
														                <div class="list-group">
																              </div>
																	                        <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/917/mark_as_help">Help!</a>
																				            </div>
																					              </div>
																						              </div>
																							            </div>

      <!-- button Help! / Canel help -->
                <button class="student_task_help btn btn-default btn-sm" data-task-id="917" >
		            Help!
			              </button>
				          </div>

  <h4 class="task">
      3. You mustn&#39;t be afraid to dream a little bigger, darling
          <span class="alert alert-warning mandatory-optional">
	        mandatory
		    </span>
		      </h4>


  <!-- Progress vs Score -->



  <p>Write a function that returns the factorial of a given number.</p>

<ul>
<li>Prototype: <code>int factorial(int n);</code><br></li>
<li>If <code>n</code> is lower than <code>0</code>, the function should return <code>-1</code> to indicate an error<br></li>
<li>Factorial of <code>0</code> is <code>1</code></li>
</ul>

<pre><code>julien@ubuntu:~/0x07. Recursion$ cat 3-main.c
#include &quot;holberton.h&quot;
#include &lt;stdio.h&gt;

/**
 * main - check the code for Holberton School students.
  *
   * Return: Always 0.
    */
    int main(void)
    {
        int r;

    r = factorial(1);
        printf(&quot;%d\n&quot;, r);
	    r = factorial(5);
	        printf(&quot;%d\n&quot;, r);
		    r = factorial(10);
		        printf(&quot;%d\n&quot;, r);
			    r = factorial(-1024);
			        printf(&quot;%d\n&quot;, r);
				    return (0);
				    }
				    julien@ubuntu:~/0x07. Recursion$ gcc -Wall -pedantic -Werror -Wextra 3-main.c 3-factorial.c -o 3-factorial
				    julien@ubuntu:~/0x07. Recursion$ ./3-factorial
				    1
				    120
				    3628800
				    -1
				    julien@ubuntu:~/0x07. Recursion$
				    </code></pre>


    <p class="sm-gap"><strong>Repo:</strong></p>
        <ul>
	      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
	              <li>Directory: <code>0x07-recursion</code></li>
		              <li>File: <code>3-factorial.c</code></li>
			          </ul>





</div>

        </div>
	        <div data-role="task918" data-position="5">
		            <div class=" clearfix gap" id="task-918">
			    <span id="user_id" data-id="81"></span>

    <div class="student_task_controls">

      <!-- button Done -->
              <button class="student_task_done btn btn-default no" data-task-id="918">
	                <span class="no"><i class="fa fa-square-o"></i></span>
			          <span class="yes"><i class="fa fa-check-square-o"></i></span>
				            <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
					              Done<span class="no pending">?</span><span class="yes">!</span>
						              </button>
							              <br>

      <!-- button Who is done? -->
            <button class="users_done_for_task btn btn-default btn-sm" data-task-id="918" data-toggle="modal" data-target="#task-918-users-done-modal">
	            Who is done?
		          </button>
			        <div class="modal fade users-done-modal" id="task-918-users-done-modal">
				        <div class="modal-dialog">
					          <div class="modal-content">
						              <div class="modal-header">
							                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
									                  <h4 class="modal-title">Batchmates who are done with "Once an idea has taken hold of the brain it&#39;s almost impossible to eradicate"</h4>
											              </div>
												                  <div class="modal-body">
														                <div class="list-group">
																              </div>
																	                        <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/918/mark_as_help">Help!</a>
																				            </div>
																					              </div>
																						              </div>
																							            </div>

      <!-- button Help! / Canel help -->
                <button class="student_task_help btn btn-default btn-sm" data-task-id="918" >
		            Help!
			              </button>
				          </div>

  <h4 class="task">
      4. Once an idea has taken hold of the brain it&#39;s almost impossible to eradicate
          <span class="alert alert-warning mandatory-optional">
	        mandatory
		    </span>
		      </h4>


  <!-- Progress vs Score -->



  <p>Write a function that returns the value of <code>x</code> raised to the power of <code>y</code>.</p>

<ul>
<li>Prototype: <code>int _pow_recursion(int x, int y);</code><br></li>
<li>If <code>y</code> is lower than <code>0</code>, the function should return <code>-1</code></li>
</ul>

<p>FYI: The standard library provides a different function: <code>pow</code>. Run <code>man pow</code> to learn more.</p>

<pre><code>julien@ubuntu:~/0x07. Recursion$ cat 4-main.c
#include &quot;holberton.h&quot;
#include &lt;stdio.h&gt;

/**
 * main - check the code for Holberton School students.
  *
   * Return: Always 0.
    */
    int main(void)
    {
        int r;

    r = _pow_recursion(1, 10);
        printf(&quot;%d\n&quot;, r);
	    r = _pow_recursion(1024, 0);
	        printf(&quot;%d\n&quot;, r);
		    r = _pow_recursion(2, 16);
		        printf(&quot;%d\n&quot;, r);
			    r = _pow_recursion(5, 2);
			        printf(&quot;%d\n&quot;, r);
				    r = _pow_recursion(5, -2);
				        printf(&quot;%d\n&quot;, r);
					    r = _pow_recursion(-5, 3);
					        printf(&quot;%d\n&quot;, r);
						    return (0);
						    }
						    julien@ubuntu:~/0x07. Recursion$ gcc -Wall -pedantic -Werror -Wextra 4-main.c 4-pow_recursion.c -o 4-pow
						    julien@ubuntu:~/0x07. Recursion$ ./4-pow
						    1
						    1
						    65536
						    25
						    -1
						    -125
						    julien@ubuntu:~/0x07. Recursion$
						    </code></pre>


    <p class="sm-gap"><strong>Repo:</strong></p>
        <ul>
	      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
	              <li>Directory: <code>0x07-recursion</code></li>
		              <li>File: <code>4-pow_recursion.c</code></li>
			          </ul>





</div>

        </div>
	        <div data-role="task919" data-position="6">
		            <div class=" clearfix gap" id="task-919">
			    <span id="user_id" data-id="81"></span>

    <div class="student_task_controls">

      <!-- button Done -->
              <button class="student_task_done btn btn-default no" data-task-id="919">
	                <span class="no"><i class="fa fa-square-o"></i></span>
			          <span class="yes"><i class="fa fa-check-square-o"></i></span>
				            <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
					              Done<span class="no pending">?</span><span class="yes">!</span>
						              </button>
							              <br>

      <!-- button Who is done? -->
            <button class="users_done_for_task btn btn-default btn-sm" data-task-id="919" data-toggle="modal" data-target="#task-919-users-done-modal">
	            Who is done?
		          </button>
			        <div class="modal fade users-done-modal" id="task-919-users-done-modal">
				        <div class="modal-dialog">
					          <div class="modal-content">
						              <div class="modal-header">
							                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
									                  <h4 class="modal-title">Batchmates who are done with "Your subconscious is looking for the dreamer"</h4>
											              </div>
												                  <div class="modal-body">
														                <div class="list-group">
																              </div>
																	                        <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/919/mark_as_help">Help!</a>
																				            </div>
																					              </div>
																						              </div>
																							            </div>

      <!-- button Help! / Canel help -->
                <button class="student_task_help btn btn-default btn-sm" data-task-id="919" >
		            Help!
			              </button>
				          </div>

  <h4 class="task">
      5. Your subconscious is looking for the dreamer
          <span class="alert alert-warning mandatory-optional">
	        mandatory
		    </span>
		      </h4>


  <!-- Progress vs Score -->



  <p>Write a function that returns the natural square root of a number.</p>

<ul>
<li>Prototype: <code>int _sqrt_recursion(int n);</code><br></li>
<li>If <code>n</code> does not have a natural square root, the function should return <code>-1</code></li>
</ul>

<p>FYI: The standard library provides a different function: <code>sqrt</code>. Run <code>man sqrt</code> to learn more.</p>

<pre><code>julien@ubuntu:~/0x07. Recursion$ cat 5-main.c
#include &quot;holberton.h&quot;
#include &lt;stdio.h&gt;

/**
 * main - check the code for Holberton School students.
  *
   * Return: Always 0.
    */
    int main(void)
    {
        int r;

    r = _sqrt_recursion(1);
        printf(&quot;%d\n&quot;, r);
	    r = _sqrt_recursion(1024);
	        printf(&quot;%d\n&quot;, r);
		    r = _sqrt_recursion(16);
		        printf(&quot;%d\n&quot;, r);
			    r = _sqrt_recursion(17);
			        printf(&quot;%d\n&quot;, r);
				    r = _sqrt_recursion(25);
				        printf(&quot;%d\n&quot;, r);
					    r = _sqrt_recursion(-1);
					        printf(&quot;%d\n&quot;, r);
						    return (0);
						    }
						    julien@ubuntu:~/0x07. gcc -Wall -pedantic -Werror -Wextra 5-main.c 5-sqrt_recursion.c -o 5-sqrt
						    julien@ubuntu:~/0x07. Recursion$ ./5-sqrt
						    1
						    32
						    4
						    -1
						    5
						    -1
						    julien@ubuntu:~/0x07. Recursion$
						    </code></pre>


    <p class="sm-gap"><strong>Repo:</strong></p>
        <ul>
	      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
	              <li>Directory: <code>0x07-recursion</code></li>
		              <li>File: <code>5-sqrt_recursion.c</code></li>
			          </ul>





</div>

        </div>
	        <div data-role="task920" data-position="7">
		            <div class=" clearfix gap" id="task-920">
			    <span id="user_id" data-id="81"></span>

    <div class="student_task_controls">

      <!-- button Done -->
              <button class="student_task_done btn btn-default no" data-task-id="920">
	                <span class="no"><i class="fa fa-square-o"></i></span>
			          <span class="yes"><i class="fa fa-check-square-o"></i></span>
				            <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
					              Done<span class="no pending">?</span><span class="yes">!</span>
						              </button>
							              <br>

      <!-- button Who is done? -->
            <button class="users_done_for_task btn btn-default btn-sm" data-task-id="920" data-toggle="modal" data-target="#task-920-users-done-modal">
	            Who is done?
		          </button>
			        <div class="modal fade users-done-modal" id="task-920-users-done-modal">
				        <div class="modal-dialog">
					          <div class="modal-content">
						              <div class="modal-header">
							                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
									                  <h4 class="modal-title">Batchmates who are done with "Inception. Is it possible?"</h4>
											              </div>
												                  <div class="modal-body">
														                <div class="list-group">
																              </div>
																	                        <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/920/mark_as_help">Help!</a>
																				            </div>
																					              </div>
																						              </div>
																							            </div>

      <!-- button Help! / Canel help -->
                <button class="student_task_help btn btn-default btn-sm" data-task-id="920" >
		            Help!
			              </button>
				          </div>

  <h4 class="task">
      6. Inception. Is it possible?
          <span class="alert alert-warning mandatory-optional">
	        mandatory
		    </span>
		      </h4>


  <!-- Progress vs Score -->



  <p>Write a function that returns 1 if a number is a <a href="https://en.wikipedia.org/wiki/Prime_number">prime number</a>, 0 otherwise.</p>

<ul>
<li>Prototype: <code>int is_prime_number(int n);</code></li>
</ul>

<pre><code>julien@ubuntu:~/0x07. Recursion$ cat 6-main.c
#include &quot;holberton.h&quot;
#include &lt;stdio.h&gt;

/**
 * main - check the code for Holberton School students.
  *
   * Return: Always 0.
    */
    int main(void)
    {
        int r;

    r = is_prime_number(1);
        printf(&quot;%d\n&quot;, r);
	    r = is_prime_number(1024);
	        printf(&quot;%d\n&quot;, r);
		    r = is_prime_number(16);
		        printf(&quot;%d\n&quot;, r);
			    r = is_prime_number(17);
			        printf(&quot;%d\n&quot;, r);
				    r = is_prime_number(25);
				        printf(&quot;%d\n&quot;, r);
					    r = is_prime_number(-1);
					        printf(&quot;%d\n&quot;, r);
						    r = is_prime_number(113);
						        printf(&quot;%d\n&quot;, r);
							    r = is_prime_number(7919);
							        printf(&quot;%d\n&quot;, r);
								    return (0);
								    }
								    julien@ubuntu:~/0x07. Recursion$ gcc -Wall -pedantic -Werror -Wextra 6-main.c 6-is_prime_number.c -o 6-prime
								    julien@ubuntu:~/0x07. Recursion$ ./6-prime
								    0
								    0
								    0
								    1
								    0
								    0
								    1
								    1
								    julien@ubuntu:~/0x07. Recursion$
								    </code></pre>


    <p class="sm-gap"><strong>Repo:</strong></p>
        <ul>
	      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
	              <li>Directory: <code>0x07-recursion</code></li>
		              <li>File: <code>6-is_prime_number.c</code></li>
			          </ul>





</div>

        </div>
	        <div data-role="task921" data-position="8">
		            <div class=" clearfix gap" id="task-921">
			    <span id="user_id" data-id="81"></span>

    <div class="student_task_controls">

      <!-- button Done -->
              <button class="student_task_done btn btn-default no" data-task-id="921">
	                <span class="no"><i class="fa fa-square-o"></i></span>
			          <span class="yes"><i class="fa fa-check-square-o"></i></span>
				            <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
					              Done<span class="no pending">?</span><span class="yes">!</span>
						              </button>
							              <br>

      <!-- button Who is done? -->
            <button class="users_done_for_task btn btn-default btn-sm" data-task-id="921" data-toggle="modal" data-target="#task-921-users-done-modal">
	            Who is done?
		          </button>
			        <div class="modal fade users-done-modal" id="task-921-users-done-modal">
				        <div class="modal-dialog">
					          <div class="modal-content">
						              <div class="modal-header">
							                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
									                  <h4 class="modal-title">Batchmates who are done with "They say we only use a fraction of our brain&#39;s true potential. Now that&#39;s when we&#39;re awake. When we&#39;re asleep, we can do almost anything"</h4>
											              </div>
												                  <div class="modal-body">
														                <div class="list-group">
																              </div>
																	                        <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/921/mark_as_help">Help!</a>
																				            </div>
																					              </div>
																						              </div>
																							            </div>

      <!-- button Help! / Canel help -->
                <button class="student_task_help btn btn-default btn-sm" data-task-id="921" >
		            Help!
			              </button>
				          </div>

  <h4 class="task">
      7. They say we only use a fraction of our brain&#39;s true potential. Now that&#39;s when we&#39;re awake. When we&#39;re asleep, we can do almost anything
          <span class="alert alert-warning mandatory-optional">
	        mandatory
		    </span>
		      </h4>


  <!-- Progress vs Score -->



  <p>Write a function that returns <code>1</code> if a string is a palindrome and <code>0</code> if not.</p>

<ul>
<li>Prototype: <code>int is_palindrome(char *s);</code><br></li>
</ul>

<pre><code>julien@ubuntu:~/0x07. Recursion$ cat 7-main.c
#include &quot;holberton.h&quot;
#include &lt;stdio.h&gt;

/**
 * main - check the code for Holberton School students.
  *
   * Return: Always 0.
    */
    int main(void)
    {
        int r;

    r = is_palindrome(&quot;level&quot;);
        printf(&quot;%d\n&quot;, r);
	    r = is_palindrome(&quot;redder&quot;);
	        printf(&quot;%d\n&quot;, r);
		    r = is_palindrome(&quot;holberton&quot;);
		        printf(&quot;%d\n&quot;, r);
			    r = is_palindrome(&quot;step on no pets&quot;);
			        printf(&quot;%d\n&quot;, r);
				    return (0);
				    }
				    julien@ubuntu:~/0x07. Recursion$ gcc -Wall -pedantic -Werror -Wextra 7-main.c 7-is_palindrome.c -o 7-palindrome
				    julien@ubuntu:~/0x07. Recursion$ ./7-palindrome
				    1
				    1
				    0
				    1
				    julien@ubuntu:~/0x07. Recursion$
				    </code></pre>


    <p class="sm-gap"><strong>Repo:</strong></p>
        <ul>
	      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
	              <li>Directory: <code>0x07-recursion</code></li>
		              <li>File: <code>7-is_palindrome.c</code></li>
			          </ul>





</div>

        </div>
	        <div data-role="task922" data-position="9">
		            <div class=" clearfix gap" id="task-922">
			    <span id="user_id" data-id="81"></span>

    <div class="student_task_controls">

      <!-- button Done -->
              <button class="student_task_done btn btn-default no" data-task-id="922">
	                <span class="no"><i class="fa fa-square-o"></i></span>
			          <span class="yes"><i class="fa fa-check-square-o"></i></span>
				            <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
					              Done<span class="no pending">?</span><span class="yes">!</span>
						              </button>
							              <br>

      <!-- button Who is done? -->
            <button class="users_done_for_task btn btn-default btn-sm" data-task-id="922" data-toggle="modal" data-target="#task-922-users-done-modal">
	            Who is done?
		          </button>
			        <div class="modal fade users-done-modal" id="task-922-users-done-modal">
				        <div class="modal-dialog">
					          <div class="modal-content">
						              <div class="modal-header">
							                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
									                  <h4 class="modal-title">Batchmates who are done with "Inception. Now, before you bother telling me it&#39;s impossible..."</h4>
											              </div>
												                  <div class="modal-body">
														                <div class="list-group">
																              </div>
																	                        <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/922/mark_as_help">Help!</a>
																				            </div>
																					              </div>
																						              </div>
																							            </div>

      <!-- button Help! / Canel help -->
                <button class="student_task_help btn btn-default btn-sm" data-task-id="922" >
		            Help!
			              </button>
				          </div>

  <h4 class="task">
      8. Inception. Now, before you bother telling me it&#39;s impossible...
          <span class="alert alert-info mandatory-optional">
	        #advanced
		    </span>
		      </h4>


  <!-- Progress vs Score -->



  <p>Write a function that compares two strings and returns <code>1</code> if the strings can be considered as identical, and <code>0</code> otherwise.</p>

<ul>
<li>Prototype: <code>int wildcmp(char *s1, char *s2);</code></li>
<li><code>s2</code> can contain the special character <code>*</code>.</li>
<li>The special char <code>*</code> can replace any string (including an empty string)</li>
</ul>

<pre><code>julien@ubuntu:~/0x07. Recursion$ cat 100-main.c
#include &quot;holberton.h&quot;
#include &lt;stdio.h&gt;

/**
 * main - check the code for Holberton School students.
  *
   * Return: Always 0.
    */
    int main(void)
    {
        int r;

    r = wildcmp(&quot;main.c&quot;, &quot;*.c&quot;);
        printf(&quot;%d\n&quot;, r);
	    r = wildcmp(&quot;main.c&quot;, &quot;m*a*i*n*.*c*&quot;);
	        printf(&quot;%d\n&quot;, r);
		    r = wildcmp(&quot;main.c&quot;, &quot;main.c&quot;);
		        printf(&quot;%d\n&quot;, r);
			    r = wildcmp(&quot;main.c&quot;, &quot;m*c&quot;);
			        printf(&quot;%d\n&quot;, r);
				    r = wildcmp(&quot;main.c&quot;, &quot;ma********************************c&quot;);
				        printf(&quot;%d\n&quot;, r);
					    r = wildcmp(&quot;main.c&quot;, &quot;*&quot;);
					        printf(&quot;%d\n&quot;, r);
						    r = wildcmp(&quot;main.c&quot;, &quot;***&quot;);
						        printf(&quot;%d\n&quot;, r);
							    r = wildcmp(&quot;main.c&quot;, &quot;m.*c&quot;);
							        printf(&quot;%d\n&quot;, r);
								    r = wildcmp(&quot;main.c&quot;, &quot;**.*c&quot;);
								        printf(&quot;%d\n&quot;, r);
									    r = wildcmp(&quot;main-main.c&quot;, &quot;ma*in.c&quot;);
									        printf(&quot;%d\n&quot;, r);
										    r = wildcmp(&quot;main&quot;, &quot;main*d&quot;);
										        printf(&quot;%d\n&quot;, r);
											    r = wildcmp(&quot;abc&quot;, &quot;*b&quot;);
											        printf(&quot;%d\n&quot;, r);
												    return (0);
												    }
												    julien@ubuntu:~/0x07. Recursion$ gcc -Wall -pedantic -Werror -Wextra 100-main.c 100-wildcmp.c -o 100-wildcmp
												    julien@ubuntu:~/0x07. Recursion$ ./100-wildcmp
												    1
												    1
												    1
												    1
												    1
												    1
												    1
												    0
												    1
												    1
												    0
												    0
												    julien@ubuntu:~/0x07. Recursion$
												    </code></pre>


    <p class="sm-gap"><strong>Repo:</strong></p>
        <ul>
	      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
	              <li>Directory: <code>0x07-recursion</code></li>
		              <li>File: <code>100-wildcmp.c</code></li>
			          </ul>





</div>

        </div>
	  </section>






      </article>

    </main>







      <script>
              (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	              (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
		              m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
			              })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

        ga('create', 'UA-67152800-6', 'auto');
	        ga('send', 'pageview');
		      </script>

  </body>
  </html>
  